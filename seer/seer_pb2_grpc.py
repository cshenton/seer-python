# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
from __future__ import absolute_import

import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import seer_pb2 as seer__pb2


class SeerStub(object):
  """The seer service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateStream = channel.unary_unary(
        '/seer.Seer/CreateStream',
        request_serializer=seer__pb2.CreateStreamRequest.SerializeToString,
        response_deserializer=seer__pb2.Stream.FromString,
        )
    self.GetStream = channel.unary_unary(
        '/seer.Seer/GetStream',
        request_serializer=seer__pb2.GetStreamRequest.SerializeToString,
        response_deserializer=seer__pb2.Stream.FromString,
        )
    self.UpdateStream = channel.unary_unary(
        '/seer.Seer/UpdateStream',
        request_serializer=seer__pb2.UpdateStreamRequest.SerializeToString,
        response_deserializer=seer__pb2.Stream.FromString,
        )
    self.DeleteStream = channel.unary_unary(
        '/seer.Seer/DeleteStream',
        request_serializer=seer__pb2.DeleteStreamRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ListStreams = channel.unary_unary(
        '/seer.Seer/ListStreams',
        request_serializer=seer__pb2.ListStreamsRequest.SerializeToString,
        response_deserializer=seer__pb2.ListStreamsResponse.FromString,
        )
    self.GetForecast = channel.unary_unary(
        '/seer.Seer/GetForecast',
        request_serializer=seer__pb2.GetForecastRequest.SerializeToString,
        response_deserializer=seer__pb2.Forecast.FromString,
        )


class SeerServicer(object):
  """The seer service
  """

  def CreateStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListStreams(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetForecast(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SeerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateStream': grpc.unary_unary_rpc_method_handler(
          servicer.CreateStream,
          request_deserializer=seer__pb2.CreateStreamRequest.FromString,
          response_serializer=seer__pb2.Stream.SerializeToString,
      ),
      'GetStream': grpc.unary_unary_rpc_method_handler(
          servicer.GetStream,
          request_deserializer=seer__pb2.GetStreamRequest.FromString,
          response_serializer=seer__pb2.Stream.SerializeToString,
      ),
      'UpdateStream': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateStream,
          request_deserializer=seer__pb2.UpdateStreamRequest.FromString,
          response_serializer=seer__pb2.Stream.SerializeToString,
      ),
      'DeleteStream': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteStream,
          request_deserializer=seer__pb2.DeleteStreamRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ListStreams': grpc.unary_unary_rpc_method_handler(
          servicer.ListStreams,
          request_deserializer=seer__pb2.ListStreamsRequest.FromString,
          response_serializer=seer__pb2.ListStreamsResponse.SerializeToString,
      ),
      'GetForecast': grpc.unary_unary_rpc_method_handler(
          servicer.GetForecast,
          request_deserializer=seer__pb2.GetForecastRequest.FromString,
          response_serializer=seer__pb2.Forecast.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'seer.Seer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
